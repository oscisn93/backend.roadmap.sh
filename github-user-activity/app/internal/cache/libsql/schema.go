// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package libsql

import (
	"database/sql"
	"time"
)

type Actor struct {
	ID           int64          `json:"id"`
	Login        string         `json:"login"`
	DisplayLogin sql.NullString `json:"display_login"`
	GravatarID   sql.NullString `json:"gravatar_id"`
	Url          sql.NullString `json:"url"`
	AvatarUrl    sql.NullString `json:"avatar_url"`
}

type Commit struct {
	ID          int64  `json:"id"`
	PayloadID   int64  `json:"payload_id"`
	Sha         string `json:"sha"`
	AuthorEmail string `json:"author_email"`
	AuthorName  string `json:"author_name"`
	Message     string `json:"message"`
	Url         string `json:"url"`
}

type Event struct {
	ID        int64        `json:"id"`
	EventID   string       `json:"event_id"`
	Type      string       `json:"type"`
	ActorID   int64        `json:"actor_id"`
	RepoID    int64        `json:"repo_id"`
	PayloadID int64        `json:"payload_id"`
	Public    bool         `json:"public"`
	CreatedAt time.Time    `json:"created_at"`
	CachedAt  sql.NullTime `json:"cached_at"`
}

type Fork struct {
	ID             int64  `json:"id"`
	ForkeeID       int64  `json:"forkee_id"`
	ForkeeName     string `json:"forkee_name"`
	ForkeeFullName string `json:"forkee_full_name"`
	ForkeePrivate  bool   `json:"forkee_private"`
}

type Gollum struct {
	ID       int64          `json:"id"`
	PageName string         `json:"page_name"`
	Title    string         `json:"title"`
	Summary  sql.NullString `json:"summary"`
	Action   string         `json:"action"`
	Sha      string         `json:"sha"`
	HtmlUrl  string         `json:"html_url"`
}

type Issue struct {
	ID        int64          `json:"id"`
	Action    string         `json:"action"`
	IssueID   int64          `json:"issue_id"`
	Number    int64          `json:"number"`
	Title     string         `json:"title"`
	UserID    int64          `json:"user_id"`
	State     string         `json:"state"`
	Body      sql.NullString `json:"body"`
	CreatedAt time.Time      `json:"created_at"`
	UpdatedAt time.Time      `json:"updated_at"`
	ClosedAt  sql.NullTime   `json:"closed_at"`
}

type IssueComment struct {
	ID            int64     `json:"id"`
	Action        string    `json:"action"`
	IssueID       int64     `json:"issue_id"`
	CommentID     int64     `json:"comment_id"`
	CommentUserID int64     `json:"comment_user_id"`
	Body          string    `json:"body"`
	CreatedAt     time.Time `json:"created_at"`
	UpdatedAt     time.Time `json:"updated_at"`
}

type Member struct {
	ID       int64  `json:"id"`
	Action   string `json:"action"`
	MemberID int64  `json:"member_id"`
}

type PrReviewComment struct {
	ID            int64     `json:"id"`
	Action        string    `json:"action"`
	CommentID     int64     `json:"comment_id"`
	PullRequestID int64     `json:"pull_request_id"`
	UserID        int64     `json:"user_id"`
	Body          string    `json:"body"`
	CreatedAt     time.Time `json:"created_at"`
	UpdatedAt     time.Time `json:"updated_at"`
}

type PullRequest struct {
	ID            int64          `json:"id"`
	Action        string         `json:"action"`
	Number        int64          `json:"number"`
	PullRequestID int64          `json:"pull_request_id"`
	State         string         `json:"state"`
	Title         string         `json:"title"`
	UserID        int64          `json:"user_id"`
	Body          sql.NullString `json:"body"`
	CreatedAt     time.Time      `json:"created_at"`
	UpdatedAt     time.Time      `json:"updated_at"`
	ClosedAt      sql.NullTime   `json:"closed_at"`
	MergedAt      sql.NullTime   `json:"merged_at"`
}

type PullRequestReview struct {
	ID            int64          `json:"id"`
	Action        string         `json:"action"`
	ReviewID      int64          `json:"review_id"`
	PullRequestID int64          `json:"pull_request_id"`
	UserID        int64          `json:"user_id"`
	Body          sql.NullString `json:"body"`
	SubmittedAt   time.Time      `json:"submitted_at"`
}

type Push struct {
	ID           int64  `json:"id"`
	PushID       string `json:"push_id"`
	RepositoryID int64  `json:"repository_id"`
	Size         int64  `json:"size"`
	DistinctSize int64  `json:"distinct_size"`
	Ref          string `json:"ref"`
	Head         string `json:"head"`
	Before       string `json:"before"`
}

type RefCreate struct {
	ID           int64          `json:"id"`
	Ref          sql.NullString `json:"ref"`
	RefType      string         `json:"ref_type"`
	MasterBranch sql.NullString `json:"master_branch"`
	Description  sql.NullString `json:"description"`
	PusherType   string         `json:"pusher_type"`
}

type RefDelete struct {
	ID      int64          `json:"id"`
	Ref     sql.NullString `json:"ref"`
	RefType string         `json:"ref_type"`
}

type Release struct {
	ID              int64          `json:"id"`
	Action          string         `json:"action"`
	ReleaseID       int64          `json:"release_id"`
	TagName         string         `json:"tag_name"`
	TargetCommitish string         `json:"target_commitish"`
	Name            sql.NullString `json:"name"`
	Body            sql.NullString `json:"body"`
	Draft           bool           `json:"draft"`
	Prerelease      bool           `json:"prerelease"`
	CreatedAt       time.Time      `json:"created_at"`
	PublishedAt     time.Time      `json:"published_at"`
}

type Repo struct {
	ID   int64  `json:"id"`
	Name string `json:"name"`
	Url  string `json:"url"`
}

type TeamAdd struct {
	ID       int64  `json:"id"`
	TeamID   int64  `json:"team_id"`
	TeamName string `json:"team_name"`
	TeamSlug string `json:"team_slug"`
}

type Watch struct {
	ID     int64  `json:"id"`
	Action string `json:"action"`
}
